import telebot
import sqlite3
from telebot import types
from dir import words
import random

bot = telebot.TeleBot('7870390365:AAH2U5ElAoactg7XN44zhfgJkykBtC1P1Cs')

def db_conn():
    return sqlite3.connect('DBTelegramBot.sql')

def create_tables():
    connect = db_conn()
    cursor = connect.cursor()

    cursor.execute("""CREATE TABLE IF NOT EXISTS User
                        (id INTEGER PRIMARY KEY AUTOINCREMENT, Name TEXT, XP INTEGER, Rate INTEGER, Date DATE) 
                     """)

    cursor.execute("""CREATE TABLE IF NOT EXISTS Word
                        (id INTEGER PRIMARY KEY AUTOINCREMENT, LWord TEXT, TWord Text, UserID INTEGER, foreign key(UserID) references User(id) ) 
                     """)

    connect.commit()
    connect.close()

create_tables()

@bot.message_handler(commands=['start'])

def start(message):
    connect = db_conn()
    cursor = connect.cursor()

    cursor.execute('Select * from User where Name=?',(message.from_user.username,))

    if not cursor.fetchone():
        cursor.execute("Insert into User (Name, Xp, Rate, Date) values (?, 0, 0, Date('now'))", (message.from_user.username,))
        connect.commit()

    connect.close()

    bot.send_message(
        message.chat.id, f'–ü—Ä–∏–≤—ñ—Ç, @{message.from_user.username}! üéÆ –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ '
                         f'LingvoMate ‚Äî –º—ñ—Å—Ü—è, –¥–µ –≥—Ä–∞ —Å—Ç–∞—î –Ω–∞–≤—á–∞–Ω–Ω—è–º! üöÄ\n\n–ì–æ—Ç–æ–≤–∏–π(-–∞) –¥–æ –ø—Ä–∏–≥–æ–¥? üåç')

    markup = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(f'–ü–æ—á–Ω–µ–º–æ –Ω–∞—à—É –º–æ–≤–Ω—É –ø–æ–¥–æ—Ä–æ–∂ —Ä–∞–∑–æ–º! üß†‚ú®', url="https://example.com")
    markup.add(button)

    bot.send_message(message.chat.id, f'üåç –ú–æ–≤–Ω–∞ –ø–æ–¥–æ—Ä–æ–∂: –≤—ñ–¥–∫—Ä–∏–≤–∞–π –Ω–æ–≤—ñ –º—ñ—Å—Ç–∞ —Ç–∞ –∫—Ä–∞—ó–Ω–∏, –≤–∏–∫–æ–Ω—É—é—á–∏ –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–∞ –ø–µ—Ä–µ–∫–ª–∞–¥ —Å–ª—ñ–≤, —Ñ—Ä–∞–∑, —Ç–∞ –≥—Ä–∞–º–∞—Ç–∏–∫—É.\n', reply_markup=markup)

@bot.message_handler(commands=['play'])
def start_game(message):
    english_word, ukrainian_translation = random.choice(list(words.items()))
    bot.send_message(message.chat.id, f"–ü–µ—Ä–µ–∫–ª–∞–¥–∏ —Ü–µ —Å–ª–æ–≤–æ: *{english_word}* –∑ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó –Ω–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É!", parse_mode='Markdown')
    bot.register_next_step_handler(message, check_translation, english_word, ukrainian_translation)


def check_translation(message, english_word, ukrainian_translation):
    user_answer = message.text.strip().lower()

    if user_answer == ukrainian_translation:
        bot.send_message(message.chat.id, "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –¢–∏ –º–æ–ª–æ–¥–µ—Ü—å!")
        add_xp(message.from_user.username, 10)
    else:
        bot.send_message(message.chat.id, f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: *{ukrainian_translation}*.", parse_mode='Markdown')

def add_xp(username, xp):
    connect = db_conn()
    cursor = connect.cursor()

    cursor.execute('SELECT * FROM User WHERE Name=?', (username,))
    user = cursor.fetchone()

    if user:
        new_xp = user[2] + xp
        cursor.execute('UPDATE User SET XP=? WHERE Name=?', (new_xp, username))
        connect.commit()

    connect.close()

@bot.message_handler(commands=['profile'])
def profile(message):
    connect = db_conn()
    cursor = connect.cursor()

    cursor.execute('SELECT * FROM User WHERE Name=?', (message.from_user.username,))
    user = cursor.fetchone()

    if user:
        username = message.from_user.username
        xp = user[2]
        rate = user[3]
        date_joined = user[4]

        profile_info = (f"üë§ –ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: @{username}\n"
                        f"üèÜ –†–µ–π—Ç–∏–Ω–≥: {rate}\n"
                        f"üéØ –î–æ—Å–≤—ñ–¥ (XP): {xp}\n"
                        f"üìÖ –î–∞—Ç–∞ –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è: {date_joined}")

        bot.send_message(message.chat.id, profile_info)
    else:
        bot.send_message(message.chat.id, "–ü—Ä–æ—Ñ—ñ–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ—é /start, —â–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å.")

@bot.message_handler(commands=['find'])
def find_user(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫–æ–≥–æ —Ö–æ—á–µ—Ç–µ –∑–Ω–∞–π—Ç–∏:")
    bot.register_next_step_handler(msg, search_user)


def search_user(message):
    search_name = message.text.strip().lower()

    connect = db_conn()
    cursor = connect.cursor()

    cursor.execute('SELECT * FROM User WHERE LOWER(Name)=?', (search_name,))
    user = cursor.fetchone()

    if user:
        username = user[1]
        xp = user[2]
        rate = user[3]
        date_joined = user[4]

        profile_info = (f"üë§ –ó–Ω–∞–π–¥–µ–Ω–∏–π –ø—Ä–æ—Ñ—ñ–ª—å: @{username}\n"
                        f"üèÜ –†–µ–π—Ç–∏–Ω–≥: {rate}\n"
                        f"üéØ –î–æ—Å–≤—ñ–¥ (XP): {xp}\n"
                        f"üìÖ –î–∞—Ç–∞ –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è: {date_joined}")

        bot.send_message(message.chat.id, profile_info)
    else:
        bot.send_message(message.chat.id, f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —ñ–º'—è–º {search_name} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

    connect.close()

# @bot.message_handler(commands=['Add'])
bot.polling()
